
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.AbstractTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gupta's
 */
public class Admin_ManageRent extends javax.swing.JFrame {

    /**
     * Creates new form Admin_ManageRent
     */
    
    
     ArrayList<bookingdetails> arraylist=new ArrayList<>();
    mytablemodel tm;
 
    public Admin_ManageRent() {
        initComponents();
        
         tm=new mytablemodel();
        jTable1.setModel(tm);
        jTable1.setBounds(10,10, 300, 300);
         
        fetch();
        setVisible(true);
        setSize(500,500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 10, 970, 200);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_ManageRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_ManageRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_ManageRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_ManageRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_ManageRent().setVisible(true);
            }
        });
    }

    
    class mytablemodel extends AbstractTableModel
{

    @Override
    public int getRowCount() {
      return arraylist.size() ;
    }

    @Override
    public int getColumnCount() {
        return 14;
    }
    
     @Override
    public String getColumnName(int j) {
        String col[]={"bookingid","priceperday","startdate","enddate","noofdays","rent","Security","name",
                     "phone","address","email","bookingtime","carid","status"};
        return col[j];
    }
        
                                             
    

    @Override
    public Object getValueAt(int j,int i) {
     bookingdetails obj = arraylist.get(j);
        if(i == 0)
         return obj.bookingid;
           
        if(i==1)
            return  obj.priceperday;
        if(i==2)
            return  obj.startdate;
         if(i == 3)
         return obj.enddate;
           
        if(i==4)
            return  obj.noofdays;
        if(i==5)
            return  obj.rent;
                if(i==6)
            return  obj.security;
        if(i==7)
            return  obj.name;
        if(i==8)
            return obj.phone;
        
        if(i==9)
            return  obj.address;
        if(i==10)
            return  obj.email;
                if(i==11)
            return  obj.bookingtime;
        if(i==12)
            return  obj.carid;
        if(i==13)
            return obj.status;
        
        

        
       return "something";
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

     void fetch()
   {
 try {
     
     arraylist.clear();
            HttpResponse<String>obj=Unirest.get("http://localhost:8888/fetchBookings").asString();
            
            if(obj.getStatus() == 200){
                String ans  = obj.getBody();
                System.out.println(ans);
                StringTokenizer st = new StringTokenizer(ans,"~");
            
                int total1 =0;
                int total2 =0;
                int total3 =0;
                
                
                
                while(st.hasMoreTokens()){
                    String ans2 = st.nextToken();
                    StringTokenizer st2 = new StringTokenizer(ans2,";");
                    int bookingid = Integer.parseInt(st2.nextToken());
                   String priceperday=st2.nextToken();
                   String startdate=st2.nextToken();
                   String enddate=st2.nextToken();
                   String noofdays=st2.nextToken();
                   String rent=st2.nextToken();
                   String security=st2.nextToken();
                   String name=st2.nextToken();
                   String phone=st2.nextToken();
                   String address=st2.nextToken();
                   String email=st2.nextToken();
                   String status=st2.nextToken();
                    int carid=Integer.parseInt(st2.nextToken());
                   String bookingtime=st2.nextToken();
                  int rent1 = Integer.parseInt(rent);
                  if(status.equals("active")){
                      total1 =  (total1 +rent1);
                      
                      System.out.println(total1);
                  } 
                  
                  
                  if(status.equals("cancel")){
                      total2 =  (total2 +rent1);
                      System.out.println(total2);
                  } 
                  
                  total3 = total1 - total2;
                    System.out.println(total3+"");
                   
                    
                    arraylist.add(new bookingdetails(bookingid, priceperday, startdate, enddate, noofdays, rent, security, name, phone, address, email, bookingtime,carid ,status));
                    
                    
                }
                tm.fireTableDataChanged();
                
            }
            
            
        } catch (UnirestException ex) {
            Logger.getLogger(mybookings.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    

   }



}

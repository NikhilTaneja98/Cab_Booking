
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Gurpreet Singh
 */
public class managecars extends javax.swing.JFrame {

   
    ArrayList<cardetails> arraylist=new ArrayList<>();
    mytablemodel tm;
    
    public managecars() {
            
        initComponents();
       
        tm=new mytablemodel();
        jt1.setModel(tm);
         fetch();
        setSize(1000,800);
        setLocation(100,100);
        setTitle("Manager Cars");
        setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt1 = new javax.swing.JTable();
        bt2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        bt1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt1.setIcon(new javax.swing.ImageIcon("C:\\Users\\gupta's\\Documents\\NetBeansProjects\\cabbooking 2\\cabbooking 2\\src\\photos\\fetch.png")); // NOI18N
        bt1.setText("Fetch...");
        bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt1ActionPerformed(evt);
            }
        });
        getContentPane().add(bt1);
        bt1.setBounds(170, 20, 130, 40);

        jt1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jt1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jt1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(20, 92, 790, 350);

        bt2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt2.setForeground(new java.awt.Color(51, 0, 51));
        bt2.setIcon(new javax.swing.ImageIcon("C:\\Users\\gupta's\\Documents\\NetBeansProjects\\cabbooking 2\\cabbooking 2\\src\\photos\\delete.jpg")); // NOI18N
        bt2.setText("Delete");
        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });
        getContentPane().add(bt2);
        bt2.setBounds(410, 20, 140, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt1ActionPerformed

   fetch();
    
    }//GEN-LAST:event_bt1ActionPerformed

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        int index=jt1.getSelectedRow();
        if(index==-1)
        {
            JOptionPane.showMessageDialog(this, "Select Row First");
        }
        else
        {
            cardetails obj=arraylist.get(index);
            delete (obj.carid);
           
           
                    
        }
    }//GEN-LAST:event_bt2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managecars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managecars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managecars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managecars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new managecars().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt1;
    private javax.swing.JButton bt2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jt1;
    // End of variables declaration//GEN-END:variables

class mytablemodel extends AbstractTableModel
{

    @Override
    public int getRowCount() {
      return arraylist.size() ;
    }

    @Override
    public int getColumnCount() {
        return 9;
    }
    
     @Override
    public String getColumnName(int j) {
        String col[]={"CarId","Car Name","Brand Name","Car Type","Fuel Type","Price Without Driver","Price With driver","Security","photo"};
        return col[j];
    }

    @Override
    public Object getValueAt(int j,int i) {
     cardetails obj = arraylist.get(j);
        if(i == 0)
         return obj.carid;
           
        if(i==1)
            return  obj.cname;
        if(i==2)
            return  obj.bname;
         if(i == 3)
         return obj.ctype;
           
        if(i==4)
            return  obj.ftype;
        if(i==5)
            return  obj.woutd;
                if(i==6)
            return  obj.wd;
        if(i==7)
            return  obj.security;
        if(i==8)
            return obj.photo;
        

        
       return "something";
    }
   

    
  
    
}
 void delete (int r)
            {
        try {
            HttpResponse<String> httpobj = Unirest.get("http://localhost:8888/deletecars").queryString("carid",r).asString();
             if(httpobj.getStatus()==200)
            {
                if(httpobj.getBody().equals("Row Deleted "))
                {
                    JOptionPane.showMessageDialog(this, httpobj.getBody());
                     fetch();
                }
                else
                {
                   JOptionPane.showMessageDialog(this, httpobj.getBody());
                }
                fetch();
            }
           
        } catch (UnirestException ex) {
            Logger.getLogger(managecars.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
  final void fetch()
 {
      try {  arraylist.clear();
          HttpResponse<String> httpobj = Unirest.get("http://localhost:8888/managecars").asString();
            if(httpobj.getStatus()==200)
            {
           
                String jt=httpobj.getBody();
                System.out.println(jt);

                StringTokenizer st1 = new StringTokenizer(jt,"~");
                while(st1.hasMoreTokens()){
                    String st2 = st1.nextToken();
                    StringTokenizer st3 = new StringTokenizer(st2,";");
                    int carid = Integer.parseInt(st3.nextToken());
                    String cname=st3.nextToken();
                    String bname=st3.nextToken();

                    String ctype=st3.nextToken();
                    String ftype=st3.nextToken();
                    int woutd = Integer.parseInt(st3.nextToken());
                    int wd = Integer.parseInt(st3.nextToken());
                    int security = Integer.parseInt(st3.nextToken());
                    String photo=st3.nextToken();
                    System.out.println(ctype+","+security);
                    arraylist.add(new cardetails(carid, cname, ctype, bname, ftype, woutd, wd, security,photo));
                    

                }
                tm.fireTableDataChanged();
            }
        } catch (UnirestException ex) {
            Logger.getLogger(managecars.class.getName()).log(Level.SEVERE, null, ex);
        }
 }
}